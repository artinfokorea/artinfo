name: CI/CD Docker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/artinfo-frontend
  VERSION: ${{ github.sha }}
  CONTANIER_NAME1: artinfo-frontend-deploy1
  CONTANIER_NAME2: artinfo-frontend-deploy2

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Create Enviroment File
        run: |
          touch .env
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.ENV_NEXT_PUBLIC_SUPABASE_URL }}" >> .env
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.ENV_NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env
          echo "NEXT_PUBLIC_GTAG_ID=${{ secrets.ENV_NEXT_PUBLIC_GTAG_ID }}" >> .env
          echo "NEXT_PUBLIC_FCM_VAPID_KEY=${{ secrets.ENV_NEXT_PUBLIC_FCM_VAPID_KEY }}" >> .env
          echo "NEXT_PUBLIC_SUPABASE_STROAGE_PREFIX_URL=${{ secrets.ENV_NEXT_PUBLIC_SUPABASE_STROAGE_PREFIX_URL }}" >> .env
          echo "NEXT_PUBLIC_FCM_API_KEY=${{ secrets.ENV_NEXT_PUBLIC_FCM_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_REST_API=${{ secrets.ENV_NEXT_PUBLIC_REST_API }}" >> .env
          echo "NEXT_NEXT_PUBLIC_NODE_ENV=${{ secrets.ENV_NEXT_PUBLIC_NODE_ENV }}" >> .env
          echo "NEXT_PUBLIC_ADMIN_ID=${{ secrets.NEXT_PUBLIC_ADMIN_ID }}" >> .env
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .env
          echo "SENTRY_LOG_LEVEL=${{ secrets.SENTRY_LOG_LEVEL }}" >> .env
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
          context: .

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, artinfo-frontend-deploy]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Docker run
        run: |
          docker rm -f ${{ env.CONTANIER_NAME1 }}
          docker run -d -p 3000:3000 --name ${{ env.CONTANIER_NAME1 }} --cpus=1 --restart always ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
          sleep 10
          
          docker rm -f ${{ env.CONTANIER_NAME2 }}
          docker run -d -p 3001:3000 --name ${{ env.CONTANIER_NAME2 }} --cpus=1 --restart always ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
        
          docker image prune -af
